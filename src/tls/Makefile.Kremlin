all: mitls-c-test.exe

# To include Makefile.common, you need to specify
# the following three variables
FLAVOR=Kremlin
EXTENSION=krml
# Don't extract modules from fstarlib (NOEXTRACT_MODULES)
# And also some specific ones from mitls that are implemented in C
EXTRACT='* -DHDB -LowCProvider -FFICallbacks'
include Makefile.common

################################################################################
# Bringing the curve from HACL* into the build

CURVE_DIR=$(HACL_HOME)/code/curve25519/x25519-c
SECURE_OUT=$(HACL_HOME)/secure_api/out/vale_aes_abstract_id

ifeq (,$(wildcard $(CURVE_DIR)/Curve25519.h))
  $(error HACL_HOME is $(HACL_HOME) and I cannot find $(CURVE_DIR)/Curve25519.h -- please run make extract-c -C $(CURVE_DIR)/.. -- thanks)
endif

# Compiling these files "standalone" so that they don't "see" the FStar.h from miTLS
$(EXTRACT_DIR)/curve-%.o: $(CURVE_DIR)/%.c
	$(CC) -I $(EXTRACT_DIR) -I $(KREMLIN_HOME)/kremlib -c $< -o $@

extract/cstubs/hacl_provider.o: extract/cstubs/hacl_provider.c
	$(CC) -I $(CURVE_DIR) -I $(KREMLIN_HOME)/kremlib -c $< -o $@

################################################################################

UNAME=$(shell uname)
ifeq ($(OS),Windows_NT)
  PATH := $(MLCRYPTO_HOME)/openssl:$(PATH)
  export PATH
else ifeq ($(UNAME),Darwin)
  DYLD_LIBRARY_PATH := $(MLCRYPTO_HOME)/openssl:$(DYLD_LIBRARY_PATH)
  export DYLD_LIBRARY_PATH
else ifeq ($(UNAME),Linux)
  LD_LIBRARY_PATH := $(MLCRYPTO_HOME)/openssl:$(LD_LIBRARY_PATH)
  export LD_LIBRARY_PATH
endif

DROP_MODULES = $(addprefix -drop , FStar.Bytes MonotoneMap MonotoneMapNonDep \
  Crypto.AEAD.Main)
HEADERS = $(addprefix -add-include ,'"hacks.h"' '"krembytes.h"' '"kremstr.h"' \
  '"hacl_glue.h"')
EXTRA_C_FILES = extract/copied/kremstr.c extract/copied/kremdate.c \
  extract/cstubs/hacl_aead.c $(SECURE_OUT)/Crypto_HKDF_Crypto_HMAC.c
# Not including curve-FStar.o since we're making sure via some dummies that all the symbols that
# Curve25519.c needs are kept.
EXTRA_O_FILES = $(EXTRACT_DIR)/curve-Curve25519.o \
  extract/cstubs/hacl_provider.o extract/cstubs/core_crypto.c
KRML_INCLUDES=$(addprefix -I , $(INCLUDE_PATHS)) \
  -I $(SECURE_OUT) -I extract/include -I concrete-flags -I $(MLCRYPTO_HOME)/openssl/include
KRML_COMMAND=krml $(KRML_INCLUDES) \
  -fnoanonymous-unions \
  -warn-error -9-7-6 \
  -fsopts --debug,yes -verbose \
  $(HEADERS) \
  -ccopts -Wno-unused-function,-O0 \
  $(DROP_MODULES)  \
  -bundle 'Crypto.AEAD.*,Crypto.Symmetric.*,Buffer.Utils,Crypto.Plain' \
  -ldopts -lcrypto,-lssl \
  -ldopts -L,$(MLCRYPTO_HOME)/openssl \
  $(KOPTS)

# The glue doesn't want a huge bundle, so we need to leave a few files outside of the bundle.
# - Crypto.Indexing, for secure_api's Crypto_AEAD_Main.h to be happy and find
#   the file
# - TLSInfo, because Crypto.Indexing.id is TLSInfo.id
# - all the files in the dependency graph of these two
mitls-c-test.exe: $(filter-out $(EXTRACT_DIR)/prims.krml,$(ALL_KRML_FILES)) $(EXTRA_C_FILES) $(EXTRA_O_FILES) $(HACL_HOME)/secure_api/out/vale.a
	$(KRML_COMMAND) $^ -tmpdir $(EXTRACT_DIR) -o $@ -no-prefix Test.Main \
	  -drop FFICallbacks \
	  -bundle Test.Main=Test.*,AEAD_GCM,AEADOpenssl,AEADProvider,Alert,BufferBytes,Connection,ConnInvariant,Content,DataStream,Encode,Epochs,FFI,Handshake,HandshakeLog,HandshakeMessages,Hashing,Hashing.CRF,Hashing.OpenSSL,HKDF,HMAC,HMAC.UFCMA,IdNonce,KDF.Common,KDF.Salt.ODH,KeySchedule,LHAEPlain,MAC,MAC_SHA1,MAC_SHA256,MasterSecret,Negotiation,QUIC,Range,Record,Signature,StAE,Standalone,StatefulLHAE,StatefulPlain,StreamAE,StreamDeltas,StreamPlain,Ticket,TLS,TLSPRF,Transport

test: mitls-c-test.exe
	./$<

mitls-c.exe: $(filter-out $(EXTRACT_DIR)/prims.krml,$(ALL_KRML_FILES)) $(EXTRA_C_FILES) $(EXTRA_O_FILES) $(HACL_HOME)/secure_api/out/vale.a
	$(KRML_COMMAND) $^ -tmpdir $(EXTRACT_DIR) -o $@
