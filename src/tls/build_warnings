Makefile.kremlin:11: warning: overriding recipe for target 'all'
Makefile:24: warning: ignoring old recipe for target 'all'
FSTAR_HOME=d:/workspace/everest/FStar d:/workspace/everest/kremlin/krml -I d:/workspace/everest/FStar/ucontrib/CoreCrypto/fst/ -I d:/workspace/everest/FStar/ucontrib/Platform/fst/ -I ../../../hacl-star/secure_api/LowCProvider/fst -I d:/workspace/everest/kremlin/kremlib -I ../../../hacl-star/specs -I ../../../hacl-star/code/lib/kremlin -I ../../../hacl-star/code/bignum -I ../../../hacl-star/code/experimental/aesgcm -I ../../../hacl-star/code/poly1305 -I ../../../hacl-star/code/salsa-family -I ../../../hacl-star/secure_api/test -I ../../../hacl-star/secure_api/utils -I ../../../hacl-star/secure_api/vale -I ../../../hacl-star/secure_api/uf1cma -I ../../../hacl-star/secure_api/prf -I ../../../hacl-star/secure_api/aead -I ../../libs/ffi MAC_SHA1.fst MAC_SHA256.fst HKDF.fst Parse.fst FFI.fst TLSError.fst Hashing.fst TLS.fst LHAEPlain.fst Handshake.fst StreamPlain.fst CommonDH.fst Crypto.Indexing.fst StreamAE.fst StatefulPlain.fst Hashing.OpenSSL.fst Transport.fst Nonce.fst Epochs.fst Signature.fst StreamDeltas.fst KeySchedule.fst AEADOpenssl.fst Negotiation.fst TLSInfo.fst Connection.fst ECGroup.fst MasterSecret.fst Ticket.fst AEADProvider.fst Alert.fst StAE.fst Content.fst Record.fst Encode.fst Curve25519.fst StatefulLHAE.fst MAC.fst IdNonce.fst PMS.fst QUIC.fst DHGroup.fst AEAD_GCM.fst TLSPRF.fst KDF.Salt.ODH.fst Cert.fst Extensions.fst PSK.fst Hashing.Spec.fst Range.fst KDF.Common.fst HMAC.UFCMA.fst HandshakeMessages.fst ConnInvariant.fst DataStream.fst Hashing.CRF.fst RSAKey.fst HandshakeLog.fst HMAC.fst TLSConstants.fst MonotoneMap.fst krml_output/main.c \
           -drop MonotoneMap -drop Platform.Bytes -drop Curve25519 -I concrete-flags -add-include '"hacks.h"' -fnoanonymous-unions \
		   -tmpdir krml_output  -warn-error +9+11-7-6 -skip-compilation
[38;5;81m‚öô KreMLin auto-detecting tools.[0m Here's what we found:
[4mreadlink is:[0m readlink
[4mKreMLin called via:[0m D:\workspace\everest\kremlin\_build\src\Kremlin.native
[4mthe Kremlin executable is:[0m D:\workspace\everest\kremlin\_build\src\Kremlin.native
[4mKreMLin home is:[0m D:/workspace/everest/kremlin
[38;5;81m‚öô KreMLin will drive F*.[0m Here's what we found:
read FSTAR_HOME via the environment
[4mfstar converted to windows path:[0m D:/workspace/everest/FStar/bin/fstar.exe
[4mfstar home converted to windows path:[0m D:/workspace/everest/FStar
[4mfstar lib converted to windows path:[0m D:/workspace/everest/FStar/ulib
fstar is on [38;5;202mbranch c_mitls2c[0m
[4mfstar is:[0m D:/workspace/everest/FStar/bin/fstar.exe --no_extract FStar.Monotonic.HyperStack --no_extract FStar.Buffer --no_extract FStar.Monotonic.HyperHeap --no_extract FStar.Map --no_extract FStar.Math.Lib --no_extract FStar.HyperHeap --no_extract FStar.HyperStack --no_extract FStar.HyperStack.ST --no_extract FStar.Seq.Base --no_extract FStar.Int128 --no_extract FStar.UInt64 --no_extract FStar.Int64 --no_extract FStar.UInt63 --no_extract FStar.Int63 --no_extract FStar.UInt32 --no_extract FStar.Int32 --no_extract FStar.UInt31 --no_extract FStar.Int31 --no_extract FStar.UInt16 --no_extract FStar.Int16 --no_extract FStar.UInt8 --no_extract FStar.Int8 --trace_error --include d:/workspace/everest/FStar/ucontrib/CoreCrypto/fst/ --include d:/workspace/everest/FStar/ucontrib/Platform/fst/ --include ../../../hacl-star/secure_api/LowCProvider/fst --include d:/workspace/everest/kremlin/kremlib --include ../../../hacl-star/specs --include ../../../hacl-star/code/lib/kremlin --include ../../../hacl-star/code/bignum --include ../../../hacl-star/code/experimental/aesgcm --include ../../../hacl-star/code/poly1305 --include ../../../hacl-star/code/salsa-family --include ../../../hacl-star/secure_api/test --include ../../../hacl-star/secure_api/utils --include ../../../hacl-star/secure_api/vale --include ../../../hacl-star/secure_api/uf1cma --include ../../../hacl-star/secure_api/prf --include ../../../hacl-star/secure_api/aead --include ../../libs/ffi --include concrete-flags --include D:/workspace/everest/kremlin/kremlib
[38;5;81m‚ö° Calling F* (use -verbose to see the output)[0m
[38;5;119m‚úî[0m [F*,extract] (use -verbose to see the output)
[38;5;119m‚úî[0m [F*] ‚è±Ô∏è <1ms
Warning 4: in top-level declaration Crypto.AEAD.Main.regions_of_fp, in file Crypto_AEAD_Main: Malformed input:
subtype mismatch, () (a.k.a. ()) vs FStar_TSet_set FStar_Monotonic_HyperHeap_rid (a.k.a. FStar_Monotonic_HyperHeap_rid -> Prims_prop)
Dropping Crypto.AEAD.Main.regions_of_fp (at checking time); if this is normal, please consider using -drop

Warning 4: after the definition of rd, in top-level declaration Ticket.ticket_enc, in file Ticket: Malformed input:
Found an unexpected type application:
FStar.HyperStack.ST.ralloc < Ticket_ticket_key >
Dropping Ticket.ticket_enc (at checking time); if this is normal, please consider using -drop

TODO: This is the relevant piece of code from Ticket.fst

  private let ticket_enc
    =
      let id0 = ticketid CC.CHACHA20_POLY1305 in
      let salt : AE.iv id0 = CoreCrypto.random (AE.ivlen id0) in
      let key : AE.key id0 = CoreCrypto.random (AE.keylen id0) in
      let wr = AE.coerce region id0 key in
      let rd = AE.genReader region #id0 wr in
      ralloc region (Key id0 salt wr rd)

Seems like Kremlin doesn't compile references yet

--------------------------------------------------------------------------------

Warning 4: in top-level declaration Signature.rkeys, in file Signature: Malformed input:
Found an unexpected type application:
FStar.Monotonic.RRef.m_alloc < Signature_kset > < Signature_mon_pkey () () >
Dropping Signature.rkeys (at checking time); if this is normal, please consider using -drop

TODO: Same as above?
--------------------------------------------------------------------------------

TODO: Next 3 seem related ... dropping the rid arg for some reason

Warning 4: in top-level declaration FStar.Set.empty__FStar_Monotonic_HyperHeap_rid, in file TLS: Malformed input:
subtype mismatch, bool (a.k.a. bool) vs FStar_Set_set FStar_Monotonic_HyperHeap_rid (a.k.a. FStar_Monotonic_HyperHeap_rid -> bool)
Dropping FStar.Set.empty__FStar_Monotonic_HyperHeap_rid (at checking time); if this is normal, please consider using -drop

Warning 4: in top-level declaration FStar.Set.singleton__FStar_Monotonic_HyperHeap_rid, in file TLS: Malformed input:
subtype mismatch, bool (a.k.a. bool) vs FStar_Set_set FStar_Monotonic_HyperHeap_rid (a.k.a. FStar_Monotonic_HyperHeap_rid -> bool)
Dropping FStar.Set.singleton__FStar_Monotonic_HyperHeap_rid (at checking time); if this is normal, please consider using -drop

Warning 4: in top-level declaration TLS.opt_writer_regions, in file TLS: Malformed input:
subtype mismatch, FStar_Monotonic_HyperHeap_rid -> FStar_Set_set FStar_Monotonic_HyperHeap_rid (a.k.a. FStar_Monotonic_HyperHeap_rid -> FStar_Set_set FStar_Monotonic_HyperHeap_rid) vs FStar_Set_set FStar_Monotonic_HyperHeap_rid (a.k.a. FStar_Monotonic_HyperHeap_rid -> bool)
Dropping TLS.opt_writer_regions (at checking time); if this is normal, please consider using -drop

TODO: Unknown location ... try to add original source location

--------------------------------------------------------------------------------


Warning 4: after the definition of keys, in top-level declaration FFI.ffiGetExporter, in file FFI: Malformed input:
Type annotation is not an lid but any
Dropping FFI.ffiGetExporter (at checking time); if this is normal, please consider using -drop

[38;5;203m‚ö†[0m [Checking input file] ‚è±Ô∏è 156ms
[38;5;119m‚úî[0m [Bundle + inline types] ‚è±Ô∏è 297ms

TODO: Another pattern matching issue?

--------------------------------------------------------------------------------

Warning 4: in the then branch, in top-level declaration Extensions.parseOptExtensions, in file Extensions: Malformed input:
subtype mismatch, enum { FStar_Pervasives_Native_option__Prims_list__Extensions_extension'__()**_None } (a.k.a. enum { FStar_Pervasives_Native_option__Prims_list__Extensions_extension'__()**_None }) vs enum { FStar_Pervasives_Native_option__Prims_list__Extensions_extension'__()********_None, FStar_Pervasives_Native_option__Prims_list__Extensions_extension'__()********_Some } (a.k.a. enum { FStar_Pervasives_Native_option__Prims_list__Extensions_extension'__()********_None, FStar_Pervasives_Native_option__Prims_list__Extensions_extension'__()********_Some })
Dropping Extensions.parseOptExtensions (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of _2, after the definition of _1, in top-level declaration FStar.Pervasives.Native.__proj__Mktuple2__item___2__Cert_cert_Extensions_extensions, in file Cert: Malformed input:
subtype mismatch, Prims_list__Extensions_extension'__()** (a.k.a. Prims_list__Extensions_extension'__()**) vs Prims_list__Extensions_extension'__()* (a.k.a. Prims_list__Extensions_extension'__()*)
Dropping FStar.Pervasives.Native.__proj__Mktuple2__item___2__Cert_cert_Extensions_extensions (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of hd1, after the definition of tl1, in the then branch, in the else branch, in top-level declaration FStar.List.Tot.Base.for_all__Cert_certes, in file Cert: Malformed input:
subtype mismatch, K___FStar_Seq_Base_seq FStar_Char_char'_Prims_list__Extensions_extension'__()**** (a.k.a. K___FStar_Seq_Base_seq FStar_Char_char'_Prims_list__Extensions_extension'__()****) vs K___FStar_Seq_Base_seq FStar_Char_char'_Prims_list__Extensions_extension'__()** (a.k.a. K___FStar_Seq_Base_seq FStar_Char_char'_Prims_list__Extensions_extension'__()**)
Dropping FStar.List.Tot.Base.for_all__Cert_certes (at checking time); if this is normal, please consider using -drop

Warning 4: after the definition of a, in the then branch, in the else branch, in top-level declaration FStar.List.Tot.Base.map__Cert_cert_Cert_certes, in file Cert: Malformed input:
subtype mismatch, K___FStar_Seq_Base_seq FStar_Char_char'_Prims_list__Extensions_extension'__()** (a.k.a. K___FStar_Seq_Base_seq FStar_Char_char'_Prims_list__Extensions_extension'__()**) vs K___FStar_Seq_Base_seq FStar_Char_char'_Prims_list__Extensions_extension'__()**** (a.k.a. K___FStar_Seq_Base_seq FStar_Char_char'_Prims_list__Extensions_extension'__()****)
Dropping FStar.List.Tot.Base.map__Cert_cert_Cert_certes (at checking time); if this is normal, please consider using -drop

Warning 4: in top-level declaration Cert.chain_up, in file Cert: Malformed input:
Not a record Prims_list__Extensions_extension'__()*
Dropping Cert.chain_up (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of _2, after the definition of _1, in top-level declaration FStar.Pervasives.Native.__proj__Mktuple2__item___1__Cert_cert_Extensions_extensions, in file Cert: Malformed input:
subtype mismatch, Prims_list__Extensions_extension'__()** (a.k.a. Prims_list__Extensions_extension'__()**) vs Prims_list__Extensions_extension'__()* (a.k.a. Prims_list__Extensions_extension'__()*)
Dropping FStar.Pervasives.Native.__proj__Mktuple2__item___1__Cert_cert_Extensions_extensions (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of a, after the definition of tl1, in the then branch, in the else branch, in top-level declaration FStar.List.Tot.Base.map__Cert_certes_Cert_cert, in file Cert: Malformed input:
subtype mismatch, K___FStar_Seq_Base_seq FStar_Char_char'_Prims_list__Extensions_extension'__()**** (a.k.a. K___FStar_Seq_Base_seq FStar_Char_char'_Prims_list__Extensions_extension'__()****) vs K___FStar_Seq_Base_seq FStar_Char_char'_Prims_list__Extensions_extension'__()** (a.k.a. K___FStar_Seq_Base_seq FStar_Char_char'_Prims_list__Extensions_extension'__()**)
Dropping FStar.List.Tot.Base.map__Cert_certes_Cert_cert (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of exts, after the definition of rest, in the then branch, in the else branch, in top-level declaration Cert.certificateListBytes13, in file Cert: Malformed input:
subtype mismatch, Prims_list__Extensions_extension'__()**** (a.k.a. Prims_list__Extensions_extension'__()****) vs Prims_list__Extensions_extension'__()* (a.k.a. Prims_list__Extensions_extension'__()*)
Dropping Cert.certificateListBytes13 (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of a, after the definition of tl1, in the then branch, in the else branch, in top-level declaration FStar.List.Tot.Base.map__Cert_cert * Extensions_extensions_Platform_Bytes_bytes, in file Cert: Malformed input:
subtype mismatch, K___FStar_Seq_Base_seq FStar_Char_char'_Prims_list__Extensions_extension'__()**** (a.k.a. K___FStar_Seq_Base_seq FStar_Char_char'_Prims_list__Extensions_extension'__()****) vs K___FStar_Seq_Base_seq FStar_Char_char'_Prims_list__Extensions_extension'__()** (a.k.a. K___FStar_Seq_Base_seq FStar_Char_char'_Prims_list__Extensions_extension'__()**)
Dropping FStar.List.Tot.Base.map__Cert_cert * Extensions_extensions_Platform_Bytes_bytes (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of es, after the definition of x, in top-level declaration Cert.validate_chain13, in file Cert: Malformed input:
subtype mismatch, Prims_list__Extensions_extension'__()** (a.k.a. Prims_list__Extensions_extension'__()**) vs Prims_list__Extensions_extension'__()* (a.k.a. Prims_list__Extensions_extension'__()*)
Dropping Cert.validate_chain13 (at checking time); if this is normal, please consider using -drop

Warning 4: in top-level declaration Nonce.lookup, in file Nonce: Malformed input:
subtype mismatch, FStar_Pervasives_Native_option__any (a.k.a. FStar_Pervasives_Native_option__any) vs FStar_Pervasives_Native_option__FStar_Monotonic_HyperHeap_rid (a.k.a. FStar_Pervasives_Native_option__FStar_Monotonic_HyperHeap_rid)
Dropping Nonce.lookup (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of t, after the definition of r, in top-level declaration DataStream.gen, in file DataStream: Malformed input:
subtype mismatch, flat { tag: enum { Prims_list__DataStream_delta__()_Nil } } (a.k.a. flat { tag: enum { Prims_list__DataStream_delta__()_Nil } }) vs Prims_list__DataStream_delta__() (a.k.a. Prims_list__DataStream_delta__())
Dropping DataStream.gen (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of header, in top-level declaration Record.makePacket, in file Record: Malformed input:
Not a record any
Dropping Record.makePacket (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of el, in the then branch, in the else branch, after the definition of scrut, in top-level declaration HandshakeMessages.bindersLen_of_ch, in file HandshakeMessages: Malformed input:
subtype mismatch, Prims_list__Extensions_extension'__()** (a.k.a. Prims_list__Extensions_extension'__()**) vs Prims_list__Extensions_extension'__()* (a.k.a. Prims_list__Extensions_extension'__()*)
Dropping HandshakeMessages.bindersLen_of_ch (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of ext, in the then branch, after the definition of scrut, in top-level declaration HandshakeMessages.clientHelloBytes, in file HandshakeMessages: Malformed input:
subtype mismatch, Prims_list__Extensions_extension'__()** (a.k.a. Prims_list__Extensions_extension'__()**) vs Prims_list__Extensions_extension'__()* (a.k.a. Prims_list__Extensions_extension'__()*)
Dropping HandshakeMessages.clientHelloBytes (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of ext, in the then branch, in top-level declaration HandshakeMessages.optionExtensionsBytes, in file HandshakeMessages: Malformed input:
subtype mismatch, Prims_list__Extensions_extension'__()** (a.k.a. Prims_list__Extensions_extension'__()**) vs Prims_list__Extensions_extension'__()* (a.k.a. Prims_list__Extensions_extension'__()*)
Dropping HandshakeMessages.optionExtensionsBytes (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of li, in the then branch, in the else branch, in top-level declaration HandshakeMessages.coercion_helper, in file HandshakeMessages: Malformed input:
subtype mismatch, Prims_list__Extensions_extension'__()** (a.k.a. Prims_list__Extensions_extension'__()**) vs Prims_list__Extensions_extension'__()* (a.k.a. Prims_list__Extensions_extension'__()*)
Dropping HandshakeMessages.coercion_helper (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of ext, in the then branch, after the definition of scrut, in the then branch, after the definition of scrut, in top-level declaration HandshakeMessages.serverHelloBytes, in file HandshakeMessages: Malformed input:
subtype mismatch, Prims_list__Extensions_extension'__()** (a.k.a. Prims_list__Extensions_extension'__()**) vs Prims_list__Extensions_extension'__()* (a.k.a. Prims_list__Extensions_extension'__()*)
Dropping HandshakeMessages.serverHelloBytes (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of sigAlgs, in the then branch, in the else branch, after the definition of scrut, in top-level declaration HandshakeMessages.certificateRequestBytes, in file HandshakeMessages: Malformed input:
subtype mismatch, Prims_list__TLSConstants_signatureScheme** (a.k.a. Prims_list__TLSConstants_signatureScheme**) vs Prims_list__TLSConstants_signatureScheme* (a.k.a. Prims_list__TLSConstants_signatureScheme*)
Dropping HandshakeMessages.certificateRequestBytes (at checking time); if this is normal, please consider using -drop

Warning 4: after the definition of uu____10410, in the then branch, in the definition of uu____10405, after the definition of uu____10401, in the definition of uu____10400, in top-level declaration HandshakeMessages.mk_certificateRequestBytes, in file HandshakeMessages: Malformed input:
subtype mismatch, Prims_list__TLSConstants_signatureScheme* (a.k.a. Prims_list__TLSConstants_signatureScheme*) vs Prims_list__TLSConstants_signatureScheme** (a.k.a. Prims_list__TLSConstants_signatureScheme**)
Dropping HandshakeMessages.mk_certificateRequestBytes (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of scrut, after the definition of m, in the then branch, in the else branch, in top-level declaration HandshakeLog.tags, in file HandshakeLog: Malformed input:
subtype mismatch, Prims_list__FStar_Seq_Base_seq FStar_Char_char'* (a.k.a. Prims_list__FStar_Seq_Base_seq FStar_Char_char'*) vs Prims_list__FStar_Seq_Base_seq FStar_Char_char'** (a.k.a. Prims_list__FStar_Seq_Base_seq FStar_Char_char'**)
Dropping HandshakeLog.tags (at checking time); if this is normal, please consider using -drop

Warning 4: in the sequence statement at index 0, after the definition of outgoing1, in the then branch, after the definition of outgoing', in top-level declaration HandshakeLog.next_fragment, in file HandshakeLog: Malformed input:
subtype mismatch, flat { tag: enum { FStar_Pervasives_Native_option__K___bool_FStar_Pervasives_Native_option__FStar_Seq_Base_seq FStar_Char_char'_bool_None } } (a.k.a. flat { tag: enum { FStar_Pervasives_Native_option__K___bool_FStar_Pervasives_Native_option__FStar_Seq_Base_seq FStar_Char_char'_bool_None } }) vs FStar_Pervasives_Native_option__K___bool_FStar_Pervasives_Native_option__FStar_Seq_Base_seq FStar_Char_char'_bool (a.k.a. FStar_Pervasives_Native_option__K___bool_FStar_Pervasives_Native_option__FStar_Seq_Base_seq FStar_Char_char'_bool)
Dropping HandshakeLog.next_fragment (at checking time); if this is normal, please consider using -drop

Warning 4: in the then branch, in the else branch, after the definition of scrut, in top-level declaration HandshakeLog.parseMessages, in file HandshakeLog: Malformed input:
Not a record Prims_list__HandshakeMessages_hs_msg***
Dropping HandshakeLog.parseMessages (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of scrut, in top-level declaration HandshakeLog.hashHandshakeMessages, in file HandshakeLog: Malformed input:
subtype mismatch, Prims_list__HandshakeMessages_hs_msg* (a.k.a. Prims_list__HandshakeMessages_hs_msg*) vs Prims_list__HandshakeMessages_hs_msg** (a.k.a. Prims_list__HandshakeMessages_hs_msg**)
Dropping HandshakeLog.hashHandshakeMessages (at checking time); if this is normal, please consider using -drop

Warning 4: in the else branch, after the definition of uu____10507, in top-level declaration HandshakeLog.receive, in file HandshakeLog: Malformed input:
this type doesn't have fields
Dropping HandshakeLog.receive (at checking time); if this is normal, please consider using -drop

Warning 4: in top-level declaration Ticket.lookup, in file Ticket: Malformed input:
subtype mismatch, FStar_Pervasives_Native_option__any (a.k.a. FStar_Pervasives_Native_option__any) vs FStar_Pervasives_Native_option__K___FStar_Seq_Base_seq FStar_Char_char'_bool (a.k.a. FStar_Pervasives_Native_option__K___FStar_Seq_Base_seq FStar_Char_char'_bool)
Dropping Ticket.lookup (at checking time); if this is normal, please consider using -drop

Warning 4: in top-level declaration Ticket.s12_lookup, in file Ticket: Malformed input:
subtype mismatch, FStar_Pervasives_Native_option__any (a.k.a. FStar_Pervasives_Native_option__any) vs FStar_Pervasives_Native_option__K___TLSConstants_protocolVersion'_TLSConstants_cipherSuite_bool_TLSInfo_msId_FStar_Seq_Base_seq FStar_Char_char' (a.k.a. FStar_Pervasives_Native_option__K___TLSConstants_protocolVersion'_TLSConstants_cipherSuite_bool_TLSInfo_msId_FStar_Seq_Base_seq FStar_Char_char')
Dropping Ticket.s12_lookup (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of gl, in the then branch, in the else branch, after the definition of cr, in the then branch, after the definition of uu____10630, in top-level declaration KeySchedule.ks_client_init, in file KeySchedule: Malformed input:
subtype mismatch, Prims_list__Parse_namedGroup** (a.k.a. Prims_list__Parse_namedGroup**) vs Prims_list__Parse_namedGroup* (a.k.a. Prims_list__Parse_namedGroup*)
Dropping KeySchedule.ks_client_init (at checking time); if this is normal, please consider using -drop

Warning 4: in the then branch, in top-level declaration FStar.List.Tot.Base.split__Prims_dtuple2 TLSInfo_binderId KeySchedule_binderKey ()_Prims_dtuple2 TLSInfo_esId KeySchedule_es (), in file KeySchedule: Malformed input:
Not a record Prims_list__Prims_dtuple2__TLSInfo_pre_binderId_HMAC_UFCMA_key__()_()*
Dropping FStar.List.Tot.Base.split__Prims_dtuple2 TLSInfo_binderId KeySchedule_binderKey ()_Prims_dtuple2 TLSInfo_esId KeySchedule_es () (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of bkl, after the definition of scrut, in the then branch, after the definition of uu____14697, in top-level declaration KeySchedule.ks_client_13_get_binder_keys, in file KeySchedule: Malformed input:
subtype mismatch, Prims_list__Prims_dtuple2__TLSInfo_pre_binderId_HMAC_UFCMA_key__()_()** (a.k.a. Prims_list__Prims_dtuple2__TLSInfo_pre_binderId_HMAC_UFCMA_key__()_()**) vs Prims_list__Prims_dtuple2__TLSInfo_pre_binderId_HMAC_UFCMA_key__()_()* (a.k.a. Prims_list__Prims_dtuple2__TLSInfo_pre_binderId_HMAC_UFCMA_key__()_()*)
Dropping KeySchedule.ks_client_13_get_binder_keys (at checking time); if this is normal, please consider using -drop

Warning 4: in the sequence statement at index 0, after the definition of s, in the then branch, after the definition of uu____16475, in top-level declaration KeySchedule.ks_client_13_hello_retry, in file KeySchedule: Malformed input:
subtype mismatch, flat { tag: enum { Prims_list__Prims_dtuple2__CommonDH_group'_CommonDH_pre_keyshare'_Nil } } (a.k.a. flat { tag: enum { Prims_list__Prims_dtuple2__CommonDH_group'_CommonDH_pre_keyshare'_Nil } }) vs Prims_list__Prims_dtuple2__CommonDH_group'_CommonDH_pre_keyshare' (a.k.a. Prims_list__Prims_dtuple2__CommonDH_group'_CommonDH_pre_keyshare')
Dropping KeySchedule.ks_client_13_hello_retry (at checking time); if this is normal, please consider using -drop

Warning 4: in the sequence statement at index 1, after the definition of log1, in top-level declaration Signature.leak, in file Signature: Malformed input:
subtype mismatch, flat { tag: enum { Signature_state__()_Corrupt } } (a.k.a. flat { tag: enum { Signature_state__()_Corrupt } }) vs Signature_state__() (a.k.a. Signature_state__())
Dropping Signature.leak (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of es, in the then branch, in the else branch, after the definition of scrut, in top-level declaration Negotiation.find_client_extension, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__Extensions_extension'__()** (a.k.a. Prims_list__Extensions_extension'__()**) vs Prims_list__Extensions_extension'__()* (a.k.a. Prims_list__Extensions_extension'__()*)
Dropping Negotiation.find_client_extension (at checking time); if this is normal, please consider using -drop

Warning 4: after the definition of vs, in the then branch, in the else branch, after the definition of scrut, in top-level declaration Negotiation.find_supported_versions, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__TLSConstants_protocolVersion'* (a.k.a. Prims_list__TLSConstants_protocolVersion'*) vs Prims_list__TLSConstants_protocolVersion'** (a.k.a. Prims_list__TLSConstants_protocolVersion'**)
Dropping Negotiation.find_supported_versions (at checking time); if this is normal, please consider using -drop

Warning 4: after the definition of algs, in the then branch, in the else branch, after the definition of scrut, in top-level declaration Negotiation.find_signature_algorithms, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__TLSConstants_signatureScheme* (a.k.a. Prims_list__TLSConstants_signatureScheme*) vs Prims_list__TLSConstants_signatureScheme** (a.k.a. Prims_list__TLSConstants_signatureScheme**)
Dropping Negotiation.find_signature_algorithms (at checking time); if this is normal, please consider using -drop

Warning 4: after the definition of psks, in the then branch, after the definition of scrut, in top-level declaration Negotiation.find_pske, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__K___FStar_Seq_Base_seq FStar_Char_char'_uint32_t* (a.k.a. Prims_list__K___FStar_Seq_Base_seq FStar_Char_char'_uint32_t*) vs Prims_list__K___FStar_Seq_Base_seq FStar_Char_char'_uint32_t** (a.k.a. Prims_list__K___FStar_Seq_Base_seq FStar_Char_char'_uint32_t**)
Dropping Negotiation.find_pske (at checking time); if this is normal, please consider using -drop

Warning 4: after the definition of ids, in the then branch, in the else branch, after the definition of psk, in the then branch, in the else branch, after the definition of scrut, in top-level declaration Negotiation.find_clientPske, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__K___FStar_Seq_Base_seq FStar_Char_char'_uint32_t* (a.k.a. Prims_list__K___FStar_Seq_Base_seq FStar_Char_char'_uint32_t*) vs Prims_list__K___FStar_Seq_Base_seq FStar_Char_char'_uint32_t**** (a.k.a. Prims_list__K___FStar_Seq_Base_seq FStar_Char_char'_uint32_t****)
Dropping Negotiation.find_clientPske (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of exts, in the then branch, in the else branch, after the definition of scrut, in top-level declaration Negotiation.find_serverPske, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__Extensions_extension'__()** (a.k.a. Prims_list__Extensions_extension'__()**) vs Prims_list__Extensions_extension'__()* (a.k.a. Prims_list__Extensions_extension'__()*)
Dropping Negotiation.find_serverPske (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of exts, in the then branch, in the else branch, after the definition of scrut, in top-level declaration Negotiation.find_serverKeyShare, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__Extensions_extension'__()** (a.k.a. Prims_list__Extensions_extension'__()**) vs Prims_list__Extensions_extension'__()* (a.k.a. Prims_list__Extensions_extension'__()*)
Dropping Negotiation.find_serverKeyShare (at checking time); if this is normal, please consider using -drop

Warning 4: after the definition of gns, in the then branch, in the else branch, after the definition of scrut, in top-level declaration Negotiation.find_supported_groups, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__Parse_namedGroup* (a.k.a. Prims_list__Parse_namedGroup*) vs Prims_list__Parse_namedGroup** (a.k.a. Prims_list__Parse_namedGroup**)
Dropping Negotiation.find_supported_groups (at checking time); if this is normal, please consider using -drop

Warning 4: after the definition of ks, in the then branch, after the definition of scrut, in top-level declaration Negotiation.find_key_shares, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__CommonDH_keyShareEntry* (a.k.a. Prims_list__CommonDH_keyShareEntry*) vs Prims_list__CommonDH_keyShareEntry** (a.k.a. Prims_list__CommonDH_keyShareEntry**)
Dropping Negotiation.find_key_shares (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of ksl, in the then branch, after the definition of scrut, in top-level declaration Negotiation.gs_of, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__CommonDH_keyShareEntry** (a.k.a. Prims_list__CommonDH_keyShareEntry**) vs Prims_list__CommonDH_keyShareEntry* (a.k.a. Prims_list__CommonDH_keyShareEntry*)
Dropping Negotiation.gs_of (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of es, in the then branch, in the else branch, after the definition of scrut, in top-level declaration Negotiation.find_server_extension, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__Extensions_extension'__()** (a.k.a. Prims_list__Extensions_extension'__()**) vs Prims_list__Extensions_extension'__()* (a.k.a. Prims_list__Extensions_extension'__()*)
Dropping Negotiation.find_server_extension (at checking time); if this is normal, please consider using -drop

Warning 4: in top-level declaration Negotiation.is_resumption12, in file Negotiation: Malformed input:
Not a record any
Dropping Negotiation.is_resumption12 (at checking time); if this is normal, please consider using -drop

Warning 4: in top-level declaration Negotiation.is_cacheable12, in file Negotiation: Malformed input:
Not a record any
Dropping Negotiation.is_cacheable12 (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of scrut, in the definition of scrut, in top-level declaration Negotiation.computeOffer, in file Negotiation: Malformed input:
subtype mismatch, K___FStar_Pervasives_Native_option__FStar_Seq_Base_seq FStar_Char_char'_Prims_list__FStar_Seq_Base_seq FStar_Char_char'** (a.k.a. K___FStar_Pervasives_Native_option__FStar_Seq_Base_seq FStar_Char_char'_Prims_list__FStar_Seq_Base_seq FStar_Char_char'**) vs K___FStar_Pervasives_Native_option__FStar_Seq_Base_seq FStar_Char_char'_Prims_list__FStar_Seq_Base_seq FStar_Char_char'**** (a.k.a. K___FStar_Pervasives_Native_option__FStar_Seq_Base_seq FStar_Char_char'_Prims_list__FStar_Seq_Base_seq FStar_Char_char'****)
Dropping Negotiation.computeOffer (at checking time); if this is normal, please consider using -drop

Warning 4: in top-level declaration Negotiation.kexAlg, in file Negotiation: Malformed input:
Not a record any
Dropping Negotiation.kexAlg (at checking time); if this is normal, please consider using -drop

Warning 4: in top-level declaration Negotiation.emsFlag, in file Negotiation: Malformed input:
Not a record any
Dropping Negotiation.emsFlag (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of v, in the then branch, in top-level declaration FStar.Pervasives.Native.uu___is_Some__Prims_list Extensions_extension, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__Extensions_extension'__()** (a.k.a. Prims_list__Extensions_extension'__()**) vs Prims_list__Extensions_extension'__()* (a.k.a. Prims_list__Extensions_extension'__()*)
Dropping FStar.Pervasives.Native.uu___is_Some__Prims_list Extensions_extension (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of v, in the then branch, in top-level declaration FStar.Pervasives.Native.__proj__Some__item__v__Prims_list Extensions_extension, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__Extensions_extension'__()** (a.k.a. Prims_list__Extensions_extension'__()**) vs Prims_list__Extensions_extension'__()* (a.k.a. Prims_list__Extensions_extension'__()*)
Dropping FStar.Pervasives.Native.__proj__Some__item__v__Prims_list Extensions_extension (at checking time); if this is normal, please consider using -drop

Warning 4: in top-level declaration Negotiation.resume_12, in file Negotiation: Malformed input:
Not a record any
Dropping Negotiation.resume_12 (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of algs, in the then branch, in the else branch, after the definition of scrut, in the then branch, after the definition of scrut, in top-level declaration Negotiation.signatureScheme_of_mode, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__TLSConstants_signatureScheme** (a.k.a. Prims_list__TLSConstants_signatureScheme**) vs Prims_list__TLSConstants_signatureScheme* (a.k.a. Prims_list__TLSConstants_signatureScheme*)
Dropping Negotiation.signatureScheme_of_mode (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of ks, in the then branch, in the definition of oks', in top-level declaration Negotiation.client_ClientHello, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__CommonDH_keyShareEntry** (a.k.a. Prims_list__CommonDH_keyShareEntry**) vs Prims_list__CommonDH_keyShareEntry* (a.k.a. Prims_list__CommonDH_keyShareEntry*)
Dropping Negotiation.client_ClientHello (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of vs, in the then branch, after the definition of scrut, in top-level declaration Negotiation.is_client13, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__TLSConstants_protocolVersion'** (a.k.a. Prims_list__TLSConstants_protocolVersion'**) vs Prims_list__TLSConstants_protocolVersion'* (a.k.a. Prims_list__TLSConstants_protocolVersion'*)
Dropping Negotiation.is_client13 (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of cext1, in the then branch, in top-level declaration Negotiation.matching_share, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__Extensions_extension'__()** (a.k.a. Prims_list__Extensions_extension'__()**) vs Prims_list__Extensions_extension'__()* (a.k.a. Prims_list__Extensions_extension'__()*)
Dropping Negotiation.matching_share (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of scrut, in the then branch, in top-level declaration Negotiation.compute_cs13_aux, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__TLSConstants_cipherSuite* (a.k.a. Prims_list__TLSConstants_cipherSuite*) vs Prims_list__TLSConstants_cipherSuite** (a.k.a. Prims_list__TLSConstants_cipherSuite**)
Dropping Negotiation.compute_cs13_aux (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of gs, in the then branch, in the else branch, after the definition of scrut, in the definition of scrut, in top-level declaration Negotiation.compute_cs13, in file Negotiation: Malformed input:
subtype mismatch, Prims_list__Parse_namedGroup** (a.k.a. Prims_list__Parse_namedGroup**) vs Prims_list__Parse_namedGroup* (a.k.a. Prims_list__Parse_namedGroup*)
Dropping Negotiation.compute_cs13 (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of scrut, after the definition of cexts, in the then branch, after the definition of uu____210009, in top-level declaration Negotiation.server_ServerShare, in file Negotiation: Malformed input:
Not a record any
Dropping Negotiation.server_ServerShare (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of pskl, after the definition of tlen, in the then branch, in the else branch, after the definition of scrut, in top-level declaration Handshake.client_Binders, in file Handshake: Malformed input:
subtype mismatch, Prims_list__K___FStar_Seq_Base_seq FStar_Char_char'_uint32_t**** (a.k.a. Prims_list__K___FStar_Seq_Base_seq FStar_Char_char'_uint32_t****) vs Prims_list__K___FStar_Seq_Base_seq FStar_Char_char'_uint32_t* (a.k.a. Prims_list__K___FStar_Seq_Base_seq FStar_Char_char'_uint32_t*)
Dropping Handshake.client_Binders (at checking time); if this is normal, please consider using -drop

Warning 4: after the definition of uu____9471, in the then branch, after the definition of uu____9456, in the definition of groups, in top-level declaration Handshake.client_ClientHello, in file Handshake: Malformed input:
subtype mismatch, Prims_list__Parse_namedGroup* (a.k.a. Prims_list__Parse_namedGroup*) vs Prims_list__Parse_namedGroup** (a.k.a. Prims_list__Parse_namedGroup**)
Dropping Handshake.client_ClientHello (at checking time); if this is normal, please consider using -drop

Warning 4: in the last element of the sequence, after the definition of digest_CF, in the last element of the sequence, after the definition of cvd, in top-level declaration Handshake.client_ClientFinished_13, in file Handshake: Malformed input:
subtype mismatch, flat { tag: enum { Handshake_machineState_C_Complete } } (a.k.a. flat { tag: enum { Handshake_machineState_C_Complete } }) vs Handshake_machineState (a.k.a. Handshake_machineState)
Dropping Handshake.client_ClientFinished_13 (at checking time); if this is normal, please consider using -drop

Warning 4: in top-level declaration Handshake.serverHello, in file Handshake: Malformed input:
Not a record any
Dropping Handshake.serverHello (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of scrut, in top-level declaration Handshake.consistent_truncation, in file Handshake: Malformed input:
subtype mismatch, FStar_Pervasives_Native_option__K___Prims_list__K___FStar_Seq_Base_seq FStar_Char_char'_uint32_t****_Prims_nat (a.k.a. FStar_Pervasives_Native_option__K___Prims_list__K___FStar_Seq_Base_seq FStar_Char_char'_uint32_t****_Prims_nat) vs FStar_Pervasives_Native_option__K___Prims_list__K___FStar_Seq_Base_seq FStar_Char_char'_uint32_t********_Prims_nat (a.k.a. FStar_Pervasives_Native_option__K___Prims_list__K___FStar_Seq_Base_seq FStar_Char_char'_uint32_t********_Prims_nat)
Dropping Handshake.consistent_truncation (at checking time); if this is normal, please consider using -drop

Warning 4: in the then branch, in the definition of state, after the definition of epochs, in top-level declaration Handshake.create, in file Handshake: Malformed input:
subtype mismatch, flat { tag: enum { Handshake_machineState_C_Idle } } (a.k.a. flat { tag: enum { Handshake_machineState_C_Idle } }) vs Handshake_machineState (a.k.a. Handshake_machineState)
Dropping Handshake.create (at checking time); if this is normal, please consider using -drop

Warning 4: in top-level declaration IdNonce.lookup, in file IdNonce: Malformed input:
subtype mismatch, FStar_Pervasives_Native_option__any (a.k.a. FStar_Pervasives_Native_option__any) vs FStar_Pervasives_Native_option__TLSInfo_id (a.k.a. FStar_Pervasives_Native_option__TLSInfo_id)
Dropping IdNonce.lookup (at checking time); if this is normal, please consider using -drop

Warning 4: in top-level declaration TLS.connect, in file TLS: Malformed input:
Not a record Prims_list__FStar_Seq_Base_seq FStar_Char_char'*
Dropping TLS.connect (at checking time); if this is normal, please consider using -drop

Warning 4: in top-level declaration TLS.resume, in file TLS: Malformed input:
subtype mismatch, Prims_list__FStar_Seq_Base_seq FStar_Char_char'* (a.k.a. Prims_list__FStar_Seq_Base_seq FStar_Char_char'*) vs Prims_list__FStar_Seq_Base_seq FStar_Char_char'** (a.k.a. Prims_list__FStar_Seq_Base_seq FStar_Char_char'**)
Dropping TLS.resume (at checking time); if this is normal, please consider using -drop

Warning 4: in top-level declaration TLS.accept_connected, in file TLS: Malformed input:
Not a record Prims_list__FStar_Seq_Base_seq FStar_Char_char'*
Dropping TLS.accept_connected (at checking time); if this is normal, please consider using -drop

Warning 4: in the last element of the sequence, after the definition of stw, in the last element of the sequence, after the definition of j_, in the last element of the sequence, in the else branch, after the definition of uu____9821, in the then branch, in the else branch, after the definition of uu____9770, in top-level declaration TLS.writeHandshake, in file TLS: Malformed input:
Not a record any
Dropping TLS.writeHandshake (at checking time); if this is normal, please consider using -drop

Warning 4: after the definition of scrut, in top-level declaration FFI.getCert, in file FFI: Malformed input:
this type doesn't have fields
Dropping FFI.getCert (at checking time); if this is normal, please consider using -drop

[38;5;203m‚ö†[0m [Pattern matches compilation] ‚è±Ô∏è 406ms
Warning 4: in top-level declaration Negotiation.chosenGroup, in file Negotiation: Malformed input:
cannot switch on element of type any
Dropping Negotiation.chosenGroup (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of uu____10225, after the definition of h0, in top-level declaration TLS.write, in file TLS: Malformed input:
subtype mismatch, flat { tag: enum { FStar_Pervasives_Native_option__bool_None } } (a.k.a. flat { tag: enum { FStar_Pervasives_Native_option__bool_None } }) vs FStar_Pervasives_Native_option__bool (a.k.a. FStar_Pervasives_Native_option__bool)
Dropping TLS.write (at checking time); if this is normal, please consider using -drop

Warning 4: in the last element of the sequence, after the definition of here, in top-level declaration QUIC.connect, in file QUIC: Malformed input:
subtype mismatch, flat { tag: enum { FStar_Pervasives_Native_option__FStar_Seq_Base_seq FStar_Char_char'_None } } (a.k.a. flat { tag: enum { FStar_Pervasives_Native_option__FStar_Seq_Base_seq FStar_Char_char'_None } }) vs FStar_Pervasives_Native_option__FStar_Seq_Base_seq FStar_Char_char' (a.k.a. FStar_Pervasives_Native_option__FStar_Seq_Base_seq FStar_Char_char')
Dropping QUIC.connect (at checking time); if this is normal, please consider using -drop

[38;5;203m‚ö†[0m [Simplify 2] ‚è±Ô∏è 359ms
Warning 9: : Some globals did not compile to C values and must be initialized before starting main(). You did not provide a main function, so users of your library MUST MAKE SURE they call kremlinit_globals(); (see kremlinit.c)
Warning 4: in the definition of scrut, in top-level declaration StatefulLHAE.region, in file StatefulLHAE: Malformed input:
subtype mismatch, TLSConstants_rw (a.k.a. TLSConstants_rw) vs AEAD_GCM_state__()_() (a.k.a. AEAD_GCM_state__()_())
Dropping StatefulLHAE.region (at checking time); if this is normal, please consider using -drop

Warning 4: in the definition of scrut, in top-level declaration StatefulLHAE.log_region, in file StatefulLHAE: Malformed input:
subtype mismatch, TLSConstants_rw (a.k.a. TLSConstants_rw) vs AEAD_GCM_state__()_() (a.k.a. AEAD_GCM_state__()_())
Dropping StatefulLHAE.log_region (at checking time); if this is normal, please consider using -drop

[38;5;203m‚ö†[0m [Inline + Simplify 2] ‚è±Ô∏è 609ms
[38;5;119m‚úî[0m [Drop] ‚è±Ô∏è 109ms
Warning 11: in top-level declaration Extensions_pskiListBytes: this expression is not Low*; the enclosing function cannot be translated into C*: fun (acc(1, ): any, pski(1, ): K___FStar_Seq_Base_seq_FStar_Char_char__uint32_t) :any { Platform_Bytes_op_At_Bar @1 Extensions_pskiBytes @0 }
Warning 11: in top-level declaration Extensions_protocol_versions_bytes: this expression is not Low*; the enclosing function cannot be translated into C*: fun (acc(1, ): any, v1(1, ): TLSConstants_protocolVersion_) :any { Platform_Bytes_op_At_Bar @1 TLSConstants_versionBytes @0 }
Warning 11: in top-level declaration Extensions_extensionPayloadBytes: this expression is not Low*; the enclosing function cannot be translated into C*: fun (acc(1, ): any, v1(1, ): TLSConstants_protocolVersion_) :any { Platform_Bytes_op_At_Bar @1 TLSConstants_versionBytes_draft @0 }
Warning 11: in top-level declaration Extensions_extensionListBytes: this expression is not Low*; the enclosing function cannot be translated into C*: fun (l(1, ): any, s(1, ): Extensions_extension_____) :any { Platform_Bytes_op_At_Bar @1 Extensions_extensionBytes @0 }
Warning 11: in top-level declaration Cert_is_classic_chain: this expression is not Low*; the enclosing function cannot be translated into C*: fun (ces(1, ): K___FStar_Seq_Base_seq_FStar_Char_char__Prims_list__Extensions_extension_______) :bool { FStar_List_Tot_Base_isEmpty__Extensions_extension FStar_Pervasives_Native_snd__Cert_cert_Extensions_extensions @0 }
Warning 11: in top-level declaration Cert_validate_chain: this expression is not Low*; the enclosing function cannot be translated into C*: fun (x(1, ): any) :any { @0 }
Warning 11: in top-level declaration Signature_test: this expression is not Low*; the enclosing function cannot be translated into C*: fun (t(0, ): any) :bool { ((): bool) }
Warning 11: in top-level declaration Signature_test: this expression is not Low*; the enclosing function cannot be translated into C*: fun (t(0, ): any) :bool { ((): bool) }
Warning 11: in top-level declaration Negotiation_sign: this expression is not Low*; the enclosing function cannot be translated into C*: fun (uu____181528(0, ): any) :bool { ((): bool) }
Warning 11: in top-level declaration Negotiation_verify: this expression is not Low*; the enclosing function cannot be translated into C*: fun (uu____181641(0, ): any) :bool { ((): bool) }
Warning 11: in top-level declaration Negotiation_negotiate: this expression is not Low*; the enclosing function cannot be translated into C*: fun (s(2, ): TLSConstants_cipherSuite) :bool { (&&,bool) TLSConstants_uu___is_CipherSuite @0 FStar_List_Tot_Base_mem__TLSConstants_valid_cipher_suite @0 @2 }
Warning 11: in top-level declaration Negotiation_acceptableCipherSuite: this expression is not Low*; the enclosing function cannot be translated into C*: fun (x1(1, ): TLSConstants_cipherSuite) :bool { (==,bool) @0 @1 }
[38;5;119m‚úî[0m [AstToCStar] ‚è±Ô∏è 2s and 125ms
[38;5;119m‚úî[0m [CStarToC] ‚è±Ô∏è <1ms
[38;5;119m‚úî[0m [PrettyPrinting] ‚è±Ô∏è 125ms
KreMLin: wrote out .c and .h files for Prims, Platform_Error, FStar, CoreCrypto, Hashing_Spec, TLSError, Parse, Platform_Date, TLSConstants, Flags, Spec_Curve25519_Lemmas, Spec_Loops, Spec_Lib, Spec_Curve25519, ECGroup, DHGroup, CommonDH, PSK, Extensions, Cert, RSAKey, PMS, Nonce, TLSInfo, Crypto_Indexing, Flag, Buffer_Utils, Crypto_Symmetric_Bytes, Crypto_Plain, Crypto_AEAD_Main, LowCProvider, AEADOpenssl, AEADProvider, Range, Alert, DataStream, Content, StatefulPlain, LHAEPlain, AEAD_GCM, StatefulLHAE, Platform_Tcp, Transport, Record, Hashing_OpenSSL, Hashing, HandshakeMessages, Hashing_CRF, HandshakeLog, HMAC, TLSPRF, StreamPlain, StreamAE, StAE, HMAC_UFCMA, Ticket, HKDF, KeySchedule, Signature, Negotiation, Epochs, Handshake, Connection, IdNonce, MasterSecret, ConnInvariant, MAC, Encode, FFICallbacks, StreamDeltas, TLS, FFI, KDF_Common, KDF_Salt_ODH, MAC_SHA1, MAC_SHA256, QUIC, kremlinit
